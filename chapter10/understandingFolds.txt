1. b & c
2.
    foldl (flip (*)) 1 [1..3]
    let f = (flip (*))
    foldl f 1 [1..3]
    foldl f (1 `f` 1) [2,3]
    foldl f ((1 `f` 1) `f` 2) [3]
    foldl f (((1 `f` 1) `f` 2) `f` 3) []
    (((1 `f` 1) `f` 2) `f` 3)
    ((1 `f` 2) `f` 3)
    ((2 * 1) `f` 3)
    (2 `f` 3)
    (3 * 2)
    6

3. c
4. a
5.
    a. foldr (++) "" ["woot", "WOOT", "woot"]
    b. foldr max 'a' "fear is the little death"
    c. foldr (&&) True [False, True]
    d. foldr (||) False [False, True]
    e. because of flip, the result is "54321": foldl (flip ((++) . show)) "" [1..5]
       foldr without flip will show "12345": foldr ((++) . show) "" [1..5]
    f. foldr const 0 [1..5]
    g. foldr const 'a' "tacos"
    h. foldl (flip const) 'a' "burritos"
    i. foldl (flip const) 0 [1..5]
